# --- ЭТАП 1: Сборщик (Builder) ---
# Используем slim-образ, он стабильнее для сборки зависимостей
FROM python:3.11-slim as builder

# Устанавливаем системные зависимости, которые могут понадобиться для сборки пакетов
RUN apt-get update && apt-get install -y --no-install-recommends gcc

# Устанавливаем рабочую директорию для сборки
WORKDIR /builder

# Создаем виртуальное окружение, чтобы не засорять систему
RUN python -m venv /opt/venv
# Активируем venv для последующих команд в этом этапе
ENV PATH="/opt/venv/bin:$PATH"

# Копируем только файл с зависимостями и устанавливаем их
# Это кэшируется, и зависимости не будут переустанавливаться при каждом изменении кода
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt


# --- ЭТАП 2: Финальный образ ---
# Начинаем с того же чистого slim-образа
FROM python:3.11-slim

# Устанавливаем рабочую директорию для запуска приложения.
# Назовем ее /code, чтобы не было конфликта имен с папкой /app.
WORKDIR /code

# Копируем виртуальное окружение из сборщика (только результат)
COPY --from=builder /opt/venv /opt/venv

# Копируем ВСЮ нашу папку с кодом (app) в рабочую директорию.
# Теперь структура будет /code/app/core/main.py
COPY ./app ./app

# Указываем, что нужно использовать Python из нашего виртуального окружения
ENV PATH="/opt/venv/bin:$PATH"

# Команда для запуска бота.
# Python будет запущен из /code, он увидит папку app и сможет импортировать app.core.main
CMD ["python", "-m", "app.core.main"]